package monologue;

import edu.wpi.first.util.struct.StructSerializable;

public interface Logged {
  public default String getPath() {
    return "";
  }
  public default String getFullPath() {
    return Monologue.loggedRegistry.getOrDefault(this, "notfound");
  }
{%for t in types%}
  /**
   * Logs a value with the default log level.
   * The key is relative to the objects path this is being called in.
   * 
   * @param key The key to log the value under relative to the objects path.
   * @param value The value to log.
   */
  public default void log(String key, {{t.java.ValueType}} value) {
    log(key, value, LogLevel.DEFAULT);
  }

  /**
   * Logs a value with the specified log level.
   * The key is relative to the objects path this is being called in.
   * 
   * @param key The key to log the value under relative to the objects path.
   * @param value The value to log.
   * @param level The log level to log the value under.
   */
  public default void log(String key, {{t.java.ValueType}} value, LogLevel level) {
    if (!Monologue.isMonologueReady(key) || Monologue.isMonologueDisabled()) return;
    Monologue.ntLogger.put(getFullPath() + "/" + key, value, level);
  }
{%endfor%}
  /**
   * Logs a value with the default log level.
   * The key is relative to the objects path this is being called in.
   * 
   * @param key The key to log the value under relative to the objects path.
   * @param value The value to log.
   */
  public default <R extends StructSerializable> void log(String key, R value) {
    log(key, value, LogLevel.DEFAULT);
  }

  /**
   * Logs a value with the specified log level.
   * The key is relative to the objects path this is being called in.
   * 
   * @param key The key to log the value under relative to the objects path.
   * @param value The value to log.
   * @param level The log level to log the value under.
   */
  public default <R extends StructSerializable> void log(String key, R value, LogLevel level) {
    if (!Monologue.isMonologueReady(key) || Monologue.isMonologueDisabled()) return;
    Monologue.ntLogger.put(getFullPath() + "/" + key, value, level);
  }

  /**
   * Logs a value with the default log level.
   * The key is relative to the objects path this is being called in.
   * 
   * @param key The key to log the value under relative to the objects path.
   * @param value The value to log.
   */
  public default <R extends StructSerializable> void log(String key, R[] value) {
    log(key, value, LogLevel.DEFAULT);
  }

  /**
   * Logs a value with the specified log level.
   * The key is relative to the objects path this is being called in.
   * 
   * @param key The key to log the value under relative to the objects path.
   * @param value The value to log.
   * @param level The log level to log the value under.
   */
  public default <R extends StructSerializable> void log(String key, R[] value, LogLevel level) {
    if (!Monologue.isMonologueReady(key) || Monologue.isMonologueDisabled()) return;
    Monologue.ntLogger.put(getFullPath() + "/" + key, value, level);
  }
}
